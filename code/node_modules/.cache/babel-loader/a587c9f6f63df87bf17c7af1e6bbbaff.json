{"ast":null,"code":"var _jsxFileName = \"/Users/jingyushi/project/pandora-chat.github.io/code/src/components/Navbar/NavElements/DropdownItem.js\";\nimport React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport DropdownToggleItem from \"./DropdownToggleItem\";\n\nconst DropdownItem = ({\n  item,\n  title\n}) => {\n  const [dropdown, setDropdown] = useState(false);\n\n  const showSub = e => {\n    e.preventDefault();\n    setDropdown(!dropdown);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"dropdown \" + (dropdown === true ? \"on\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: process.env.PUBLIC_URL,\n    className: \"dropdown-toggle\",\n    \"data-toggle\": \"dropdown\",\n    onClick: showSub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: dropdown,\n    timeout: 300,\n    classNames: \"dropdown-menu-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dropdown-menu single-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, item.map((val, i) => /*#__PURE__*/React.createElement(DropdownToggleItem, {\n    key: val.id,\n    subMenu: val.subMenu,\n    title: val.title,\n    link: val.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }) // <li key={val.id} className={\"dropdown oo \" + (collapse ? \"on\" : \"\")}>\n  //   <Link\n  //     className={val.subMenu ? \"dropdown-toggle\" : null}\n  //     data-toggle=\"dropdown\"\n  //     to={process.env.PUBLIC_URL + val.link}\n  //     onClick={showCollapse}\n  //   >\n  //     {val.title}\n  //   </Link>\n  //   {val.subMenu ? (\n  //     <DropdownSubItem item={val.subMenu} collapse={collapse} />\n  //   ) : null}\n  // </li>\n  ))));\n};\n\nexport default DropdownItem;","map":{"version":3,"sources":["/Users/jingyushi/project/pandora-chat.github.io/code/src/components/Navbar/NavElements/DropdownItem.js"],"names":["React","useState","CSSTransition","DropdownToggleItem","DropdownItem","item","title","dropdown","setDropdown","showSub","e","preventDefault","process","env","PUBLIC_URL","map","val","i","id","subMenu","link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMQ,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAHD;;AAKA,sBACE;AAAI,IAAA,SAAS,EAAE,eAAeA,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,EAA1C,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAEK,OAAO,CAACC,GAAR,CAAYC,UADpB;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,UAHd;AAIE,IAAA,OAAO,EAAEL,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,KANH,CADF,eASE,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAEC,QAAnB;AAA6B,IAAA,OAAO,EAAE,GAAtC;AAA2C,IAAA,UAAU,EAAC,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACU,GAAL,CAAS,CAACC,GAAD,EAAMC,CAAN,kBACR,oBAAC,kBAAD;AACE,IAAA,GAAG,EAAED,GAAG,CAACE,EADX;AAEE,IAAA,OAAO,EAAEF,GAAG,CAACG,OAFf;AAGE,IAAA,KAAK,EAAEH,GAAG,CAACV,KAHb;AAIE,IAAA,IAAI,EAAEU,GAAG,CAACI,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,CAOR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBD,GADH,CADF,CATF,CADF;AAqCD,CA7CD;;AA+CA,eAAehB,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport DropdownToggleItem from \"./DropdownToggleItem\";\n\nconst DropdownItem = ({ item, title }) => {\n  const [dropdown, setDropdown] = useState(false);\n\n  const showSub = (e) => {\n    e.preventDefault();\n    setDropdown(!dropdown);\n  };\n\n  return (\n    <li className={\"dropdown \" + (dropdown === true ? \"on\" : \"\")}>\n      <a\n        href={process.env.PUBLIC_URL}\n        className=\"dropdown-toggle\"\n        data-toggle=\"dropdown\"\n        onClick={showSub}\n      >\n        {title}\n      </a>\n      <CSSTransition in={dropdown} timeout={300} classNames=\"dropdown-menu-\">\n        <ul className=\"dropdown-menu single-dropdown\">\n          {item.map((val, i) => (\n            <DropdownToggleItem\n              key={val.id}\n              subMenu={val.subMenu}\n              title={val.title}\n              link={val.link}\n            />\n            // <li key={val.id} className={\"dropdown oo \" + (collapse ? \"on\" : \"\")}>\n            //   <Link\n            //     className={val.subMenu ? \"dropdown-toggle\" : null}\n            //     data-toggle=\"dropdown\"\n            //     to={process.env.PUBLIC_URL + val.link}\n            //     onClick={showCollapse}\n            //   >\n            //     {val.title}\n            //   </Link>\n            //   {val.subMenu ? (\n            //     <DropdownSubItem item={val.subMenu} collapse={collapse} />\n            //   ) : null}\n            // </li>\n          ))}\n        </ul>\n      </CSSTransition>\n    </li>\n  );\n};\n\nexport default DropdownItem;\n"]},"metadata":{},"sourceType":"module"}