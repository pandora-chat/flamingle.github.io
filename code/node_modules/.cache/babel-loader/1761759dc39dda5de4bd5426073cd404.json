{"ast":null,"code":"var _jsxFileName = \"/Users/jingyushi/project/pandora-chat.github.io/code/src/components/Navbar/NavElements/DropdownMega.js\";\nimport React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport DropdownMegaCol from \"./DropdownMegaCol\";\n\nconst DropdownMega = ({\n  item,\n  columnTitle,\n  title,\n  itemsPerCol\n}) => {\n  let items = [];\n\n  for (var i = 0; i < item.length; i += itemsPerCol) {\n    items.push(item.slice(i, i + itemsPerCol));\n  }\n\n  const [dropdown, setDropdown] = useState(false);\n\n  const showSub = e => {\n    e.preventDefault();\n    setDropdown(!dropdown);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"dropdown megamenu-fw \" + (dropdown === true ? \"on\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: process.env.PUBLIC_URL,\n    className: \"dropdown-toggle\",\n    \"data-toggle\": \"dropdown\",\n    onClick: showSub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: dropdown,\n    timeout: 300,\n    classNames: \"dropdown-menu-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dropdown-menu megamenu-content\",\n    role: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, items.map((val, i) => /*#__PURE__*/React.createElement(DropdownMegaCol, {\n    columnTitle: columnTitle,\n    key: i,\n    val: val,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default DropdownMega;","map":{"version":3,"sources":["/Users/jingyushi/project/pandora-chat.github.io/code/src/components/Navbar/NavElements/DropdownMega.js"],"names":["React","useState","CSSTransition","DropdownMegaCol","DropdownMega","item","columnTitle","title","itemsPerCol","items","i","length","push","slice","dropdown","setDropdown","showSub","e","preventDefault","process","env","PUBLIC_URL","map","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAA+C;AAClE,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACM,MAAzB,EAAiCD,CAAC,IAAIF,WAAtC,EAAmD;AACjDC,IAAAA,KAAK,CAACG,IAAN,CAAWP,IAAI,CAACQ,KAAL,CAAWH,CAAX,EAAcA,CAAC,GAAGF,WAAlB,CAAX;AACD;;AACD,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMe,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,SAAS,EAAE,2BAA2BA,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,EAAtD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AACE,IAAA,IAAI,EAAEK,OAAO,CAACC,GAAR,CAAYC,UADpB;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,UAHd;AAIE,IAAA,OAAO,EAAEL,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGT,KANH,CAHF,eAWE,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAEO,QAAnB;AAA6B,IAAA,OAAO,EAAE,GAAtC;AAA2C,IAAA,UAAU,EAAC,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,gCAAd;AAA+C,IAAA,IAAI,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACa,GAAN,CAAU,CAACC,GAAD,EAAMb,CAAN,kBACT,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEJ,WAA9B;AAA2C,IAAA,GAAG,EAAEI,CAAhD;AAAmD,IAAA,GAAG,EAAEa,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF,CADF,CAXF,CADF;AAyBD,CApCD;;AAsCA,eAAenB,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport DropdownMegaCol from \"./DropdownMegaCol\";\n\nconst DropdownMega = ({ item, columnTitle, title, itemsPerCol }) => {\n  let items = [];\n  for (var i = 0; i < item.length; i += itemsPerCol) {\n    items.push(item.slice(i, i + itemsPerCol));\n  }\n  const [dropdown, setDropdown] = useState(false);\n  const showSub = (e) => {\n    e.preventDefault();\n    setDropdown(!dropdown);\n  };\n  \n  return (\n    <li\n      className={\"dropdown megamenu-fw \" + (dropdown === true ? \"on\" : \"\")}\n    >\n      <a\n        href={process.env.PUBLIC_URL}\n        className=\"dropdown-toggle\"\n        data-toggle=\"dropdown\"\n        onClick={showSub}\n      >\n        {title}\n      </a>\n      <CSSTransition in={dropdown} timeout={300} classNames=\"dropdown-menu-\">\n        <ul className=\"dropdown-menu megamenu-content\" role=\"menu\">\n          <li>\n            <div className=\"row\">\n              {items.map((val, i) => (\n                <DropdownMegaCol columnTitle={columnTitle} key={i} val={val} />\n              ))}\n            </div>\n          </li>\n        </ul>\n      </CSSTransition>\n    </li>\n  );\n};\n\nexport default DropdownMega;\n"]},"metadata":{},"sourceType":"module"}