{"ast":null,"code":"import _slicedToArray from\"/Users/jingyushi/project/pandora-chat.github.io/code/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";export default function useWindowSize(){var isClient=typeof window===\"object\";function getSize(){return{width:isClient?window.innerWidth:undefined,height:isClient?window.innerHeight:undefined};}var _useState=useState(getSize),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];useEffect(function(){if(!isClient){return false;}function handleResize(){setWindowSize(getSize());}window.addEventListener(\"resize\",handleResize);return function(){return window.removeEventListener(\"resize\",handleResize);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return windowSize;}","map":{"version":3,"sources":["/Users/jingyushi/project/pandora-chat.github.io/code/src/helpers/useWindowSize.js"],"names":["useState","useEffect","useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":"2KAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,cAAe,SAASC,CAAAA,aAAT,EAAyB,CACtC,GAAMC,CAAAA,QAAQ,CAAG,MAAOC,CAAAA,MAAP,GAAkB,QAAnC,CAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,MAAO,CACLC,KAAK,CAAEH,QAAQ,CAAGC,MAAM,CAACG,UAAV,CAAuBC,SADjC,CAELC,MAAM,CAAEN,QAAQ,CAAGC,MAAM,CAACM,WAAV,CAAwBF,SAFnC,CAAP,CAID,CARqC,cAUFR,QAAQ,CAACK,OAAD,CAVN,wCAU/BM,UAV+B,eAUnBC,aAVmB,eAYtCX,SAAS,CAAC,UAAM,CACd,GAAI,CAACE,QAAL,CAAe,CACb,MAAO,MAAP,CACD,CAED,QAASU,CAAAA,YAAT,EAAwB,CACtBD,aAAa,CAACP,OAAO,EAAR,CAAb,CACD,CAEDD,MAAM,CAACU,gBAAP,CAAwB,QAAxB,CAAkCD,YAAlC,EACA,MAAO,kBAAMT,CAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,CAAqCF,YAArC,CAAN,EAAP,CACA;AACD,CAZQ,CAYN,EAZM,CAAT,CAcA,MAAOF,CAAAA,UAAP,CACD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return windowSize;\n}"]},"metadata":{},"sourceType":"module"}